name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Environment Variables for Tests
        run: |
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
          # 테스트 할 때 필요한 다른 필요한 환경 변수를 여기에 추가하면 됩니다.

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      
      - name: Run Tests
        run: ./gradlew test
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: koreaygj/groomy-ide:latest
          build-args: |
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}

      - name: Login to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo yarn update && sudo yarn install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker

      - name: Set Environment Variables on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo 'export DATABASE_URL="${{ secrets.DATABASE_URL }}"' | sudo tee -a /etc/environment
            echo 'export DATABASE_USERNAME="${{ secrets.DATABASE_USERNAME }}"' | sudo tee -a /etc/environment
            echo 'export DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}"' | sudo tee -a /etc/environment
            echo 'export JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}"' | sudo tee -a /etc/environment
            # 적용을 위해 SSH 세션 내에서 환경 변수 로드
            source /etc/environment


      - name: Pull and Deploy Docker Image on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/groomy-ide
            pwd
            ls
            docker-compose down
            docker pull koreaygj/groomy-ide:latest
            docker-compose up -d
